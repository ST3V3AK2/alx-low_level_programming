!<arch>
0-isupper.c/    0           0     0     644     229       `
#include "main.h"

/**
 * _isupper - checks if c is in uppercase
 * @c: input character
 *
 * Return: 1 for uppercase leyters and 0 for not.
 */

int _isupper(int c)
{
	if (c >= 65 && c <= 90)
		return (1);
	else
		return (0);
}

0-memset.c/     0           0     0     644     0         `
0-strcat.c/     0           0     0     644     352       `
#include "main.h"

/**
 * _strcat - concatenates two strings
 * @dest: pointer to destination string
 * @:src: pointer to source string
 *
 * Return: a pointer to the dest srting
 */

char *_strcat(char *dest, char *src)
{
	int i = 0;;
	int n = sizeof(dest) - 1;

	while (i < sizeof(src))
	{
		*(dest + n + i) = *(src + i);
		i++;
	}
	return (dest);
}
100-atoi.c/     0           0     0     644     0         `
1-isdigit.c/    0           0     0     644     218       `
#include "main.h"

/**
 * _isdigit- checks if c is a digit
 * @c: input character
 *
 * Return: 1 for digits and 0 for none digits.
 */

int _isdigit(int c)
{
	if (c >= 0 && c <= 9)
		return (1);
	else
		return (0);
}
1-memcpy.c/     0           0     0     644     0         `
1-strncat.c/    0           0     0     644     464       `
#include "main.h"

/**
 * _strncat - concatenates two strings for n bytes
 * @dest: pointer to destination string
 * @:src: pointer to source string
 * @n: number of bytes to be copied
 *
 * Return: a pointer to the dest srting
 */

char *_strncat(char *dest, char *src, int n)
{
	int i = 0;
	int j =  sizeof(dest) - 1;

	while (i < n && *(src + i) != '\0')
	{
		*(dest + j + i) = *(src + i);
		i++;
	}
	for ( ; i < n; i++)
		*(dest + i) = '\0';
	return (dest);
}
2-strchr.c/     0           0     0     644     0         `
2-strlen.c/     0           0     0     644     0         `
2-strncpy.c/    0           0     0     644     451       `
#include "main.h"

/**
 * _strncpy - copies src into dest string for n bytes
 * @dest: pointer to destination string
 * @:src: pointer to source string
 * @n: number of bytes to copy
 *
 * Return: a pointer to the dest srting
 */

char *_strncpy(char *dest, char *src, int n)
{
	int i = 0;;
	int n = sizeof(dest) - 1;

	while (i < n && src[i] != '\0')
	{
		*(dest  + i) = *(src + i);
		i++;
	}
	for ( ; i < n; i++)
		dest{i} = '\0';
	return (dest);
}

3-islower.c/    0           0     0     644     0         `
3-puts.c/       0           0     0     644     0         `
3-strcmp.c/     0           0     0     644     440       `
#include "main.h"

/**
 * _strcmp -  ompares wo diffrernt strings
 * @dest: pointer to destination string
 * @:src: pointer to source string
 * @n: number of bytes to copy
 *
 * Return: a pointer to the dest srting
 */

char *_strncpy(char *dest, char *src, int n)
{
	int i = 0;;
	int n = sizeof(dest) - 1;

	while (i < n && src[i] != '\0')
	{
		*(dest  + i) = *(src + i);
		i++;
	}
	for ( ; i < n; i++)
		dest{i} = '\0';
	return (dest);
}
3-strspn.c/     0           0     0     644     0         `
4-isalpha.c/    0           0     0     644     0         `
4-strpbrk.c/    0           0     0     644     0         `
5-strstr.c/     0           0     0     644     0         `
6-abs.c/        0           0     0     644     0         `
9-strcpy.c/     0           0     0     644     0         `
